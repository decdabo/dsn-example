(()=>{"use strict";const e=new class{constructor(){this.baseURL="/api/tasks"}async getTasks(e){return await(await fetch(`${this.baseURL}${e?`/${e}`:""}`)).json()}async deleteTask(e){await fetch(`${this.baseURL}/${e||""}`,{method:"DELETE"})}async createTask(e){await fetch(this.baseURL,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})}},t=class{async renderTasks(){const t=await e.getTasks(),a=document.getElementById("root");if(a.innerHTML="",0===t.length){const e=document.createElement("div");return e.innerHTML="\n        <span>No tasks here...</span>\n        <h2>Create one!</h2>\n      ",a.appendChild(e)}t.forEach((e=>{const t=document.createElement("div");t.className="row p-4 task-box",t.innerHTML=`\n        <label class="col-8">${e.name}</label>\n        <div class="col-2 d-flex align-items-center justify-content-center">\n          <input type="checkbox" name="checkbox" value="${e._id}">\n        </div>\n        <div class="col-2 d-flex align-items-center justify-content-center">\n          <button type="button" name="delete-button" value="${e._id}" class="btn btn-danger">X</button>\n        </div>\n      `,a.appendChild(t)}))}async createTask(t){await e.createTask(t),this.renderTasks()}async deleteTask(t){await e.deleteTask(t),await this.renderTasks()}async deleteAllTasks(){await e.deleteTask(),await this.renderTasks()}},a=document.getElementById("create-task-form");let n=[];document.addEventListener("DOMContentLoaded",(async()=>{const e=new t;await e.renderTasks()})),a.addEventListener("submit",(async e=>{e.preventDefault();const n=new t,s=a.name.value;(new FormData).append("name",s),await n.createTask({name:s}),a.name.value=""})),document.getElementById("delete-all").addEventListener("click",(async()=>{const e=new t;await e.deleteAllTasks()})),document.getElementById("delete-markeds").addEventListener("click",(async()=>{const e=new t;return n.length?n.forEach((async t=>{await e.deleteTask(t)})):alert("No tasks marked")})),document.getElementById("root").addEventListener("click",(async e=>{switch(e.target.name){case"checkbox":e.target.checked?n.push(e.target.value):n=n.filter((t=>t!=e.target.value));break;case"delete-button":const a=new t;await a.deleteTask(e.target.value)}}))})();
//# sourceMappingURL=bundle.js.map