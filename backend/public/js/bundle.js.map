{"version":3,"file":"js/bundle.js","mappings":"mBA0BA,MCxBMA,EAAW,IDFjB,MACEC,cACEC,KAAKC,QAAU,YACjB,CAEAC,eAAeC,GAGb,mBAFyBC,MAAM,GAAGJ,KAAKC,UAAWE,EAAO,IAAIA,IAAS,OAAOE,MAG/E,CACAH,iBAAiBI,SACTF,MAAM,GAAGJ,KAAKC,WAAWK,GAAU,KAAM,CAC7CC,OAAQ,UAEZ,CACAL,iBAAiBM,SACTJ,MAAMJ,KAAKC,QAAS,CACxBM,OAAQ,OACRE,QAAQ,CACN,eAAe,oBAEjBC,KAAMC,KAAKC,UAAUJ,IAEzB,GC8BF,EAlDA,MACEN,oBACE,MAAMW,QAAcf,EAASgB,WACvBC,EAAOC,SAASC,eAAe,QAGrC,GAFAF,EAAKG,UAAY,GAEI,IAAjBL,EAAMM,OAAc,CACtB,MAAMC,EAAQJ,SAASK,cAAc,OAMrC,OALAD,EAAMF,UAAY,gFAKXH,EAAKO,YAAYF,EAC1B,CAEAP,EAAMU,SAASC,IACb,MAAMC,EAAWT,SAASK,cAAc,OACxCI,EAASC,UAAY,mBACrBD,EAASP,UAAY,kCACIM,EAAKrB,uJAEsBqB,EAAKG,oKAGDH,EAAKG,iEAG7DZ,EAAKO,YAAYG,EAAS,GAE9B,CAEAvB,iBAAiB0B,SACT9B,EAAS+B,WAAWD,GAE1B5B,KAAK8B,aACP,CAEA5B,iBAAiBI,SACTR,EAASiC,WAAWzB,SAEpBN,KAAK8B,aACb,CACA5B,6BACQJ,EAASiC,mBAET/B,KAAK8B,aACb,GC/CIE,EAAiBhB,SAASC,eAAe,oBAC/C,IAAIgB,EAAU,GAGdjB,SAASkB,iBAAiB,oBAAoBhC,UAC5C,MAAMiC,EAAK,IAAI,QACTA,EAAGL,aAAa,IAIxBE,EAAeE,iBAAiB,UAAUhC,MAAMkC,IAC9CA,EAAEC,iBACF,MAAMF,EAAK,IAAI,EACThC,EAAO6B,EAAqB,KAAEM,OAEvB,IAAIC,UACZC,OAAO,OAAQrC,SAEdgC,EAAGN,WAAW,CAAE1B,SACtB6B,EAAqB,KAAEM,MAAQ,EAAE,IAInCtB,SAASC,eAAe,cAAciB,iBAAiB,SAAShC,UAC9D,MAAMiC,EAAK,IAAI,QAETA,EAAGM,gBAAgB,IAG3BzB,SAASC,eAAe,kBAAkBiB,iBAAiB,SAAShC,UAClE,MAAMiC,EAAK,IAAI,EACf,OAAIF,EAAQd,OACHc,EAAQV,SAASrB,MAAOI,UACvB6B,EAAGJ,WAAWzB,EAAG,IAIpBoC,MAAM,kBAAiB,IAIhC1B,SAASC,eAAe,QAAQiB,iBAAiB,SAAShC,MAAOkC,IAC/D,OAAQA,EAAEO,OAAOxC,MACf,IAAK,WACCiC,EAAEO,OAAOC,QACXX,EAAQY,KAAKT,EAAEO,OAAOL,OAEtBL,EAAUA,EAAQa,QAAQxC,GAAMA,GAAM8B,EAAEO,OAAOL,QAEjD,MACF,IAAK,gBACH,MAAMH,EAAK,IAAI,QAETA,EAAGJ,WAAWK,EAAEO,OAAOL,OAIjC,G","sources":["webpack://test-pixelhr/./frontend/services/Services.js","webpack://test-pixelhr/./frontend/ui.js","webpack://test-pixelhr/./frontend/index.js"],"sourcesContent":["class TaskServices {\r\n  constructor() {\r\n    this.baseURL = \"/api/tasks\";\r\n  }\r\n\r\n  async getTasks(name) {\r\n    const res = await (await fetch(`${this.baseURL}${ name ? `/${name}` : ''}`)).json();\r\n\r\n    return res;\r\n  }\r\n  async deleteTask(id) {\r\n    await fetch(`${this.baseURL}/${id ? id : ''}`, {\r\n      method: 'DELETE'\r\n    });\r\n  }\r\n  async createTask(form) {\r\n    await fetch(this.baseURL, {\r\n      method: 'POST',\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify(form)\r\n    });\r\n  }\r\n}\r\n\r\nexport default TaskServices;\r\n","import TaskServices from \"./services/Services\";\r\n\r\nconst services = new TaskServices();\r\nclass Ui {\r\n  async renderTasks() {\r\n    const tasks = await services.getTasks();\r\n    const root = document.getElementById('root');\r\n    root.innerHTML = '';\r\n    \r\n    if (tasks.length === 0) {\r\n      const child = document.createElement('div');\r\n      child.innerHTML = `\r\n        <span>No tasks here...</span>\r\n        <h2>Create one!</h2>\r\n      `;\r\n\r\n      return root.appendChild(child)\r\n    }\r\n\r\n    tasks.forEach( task => {\r\n      const taskItem = document.createElement('div');\r\n      taskItem.className = 'row p-4 task-box';\r\n      taskItem.innerHTML = `\r\n        <label class=\"col-8\">${task.name}</label>\r\n        <div class=\"col-2 d-flex align-items-center justify-content-center\">\r\n          <input type=\"checkbox\" name=\"checkbox\" value=\"${task._id}\">\r\n        </div>\r\n        <div class=\"col-2 d-flex align-items-center justify-content-center\">\r\n          <button type=\"button\" name=\"delete-button\" value=\"${task._id}\" class=\"btn btn-danger\">X</button>\r\n        </div>\r\n      `;\r\n      root.appendChild(taskItem);\r\n    });\r\n  }\r\n\r\n  async createTask(formData) {\r\n    await services.createTask(formData);\r\n\r\n    this.renderTasks()\r\n  }\r\n\r\n  async deleteTask(id) {\r\n    await services.deleteTask(id)\r\n\r\n    await this.renderTasks();\r\n  }\r\n  async deleteAllTasks() {\r\n    await services.deleteTask();\r\n    \r\n    await this.renderTasks();\r\n  }\r\n}\r\n\r\nexport default Ui;\r\n","import './syles/styles.css';\r\nimport Ui from './ui';\r\n\r\nconst createTaskForm = document.getElementById('create-task-form');\r\nlet taskIds = [];\r\n\r\n// Task render  \r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  const ui = new Ui();\r\n  await ui.renderTasks();\r\n});\r\n\r\n// Form  logic \r\ncreateTaskForm.addEventListener('submit', async(e) => {\r\n  e.preventDefault()\r\n  const ui = new Ui();\r\n  const name = createTaskForm['name'].value;\r\n\r\n  const form = new FormData();\r\n  form.append(\"name\", name);\r\n  \r\n  await ui.createTask({ name });\r\n  createTaskForm['name'].value = '';\r\n})\r\n\r\n// Delete buttons \r\ndocument.getElementById('delete-all').addEventListener('click', async() => {\r\n  const ui = new Ui();\r\n\r\n  await ui.deleteAllTasks();\r\n})\r\n\r\ndocument.getElementById('delete-markeds').addEventListener('click', async() => {\r\n  const ui = new Ui();\r\n  if (taskIds.length) {\r\n    return taskIds.forEach( async (id) => {\r\n      await ui.deleteTask(id);\r\n    })\r\n  }\r\n\r\n  return alert('No tasks marked')\r\n})\r\n\r\n// Task buttons \r\ndocument.getElementById('root').addEventListener('click', async (e) => {\r\n  switch (e.target.name) {\r\n    case 'checkbox':\r\n      if (e.target.checked) {\r\n        taskIds.push(e.target.value);\r\n      } else {\r\n        taskIds = taskIds.filter( id => id != e.target.value );\r\n      }\r\n      break;\r\n    case 'delete-button': \r\n      const ui = new Ui();\r\n\r\n      await ui.deleteTask(e.target.value);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n"],"names":["services","constructor","this","baseURL","async","name","fetch","json","id","method","form","headers","body","JSON","stringify","tasks","getTasks","root","document","getElementById","innerHTML","length","child","createElement","appendChild","forEach","task","taskItem","className","_id","formData","createTask","renderTasks","deleteTask","createTaskForm","taskIds","addEventListener","ui","e","preventDefault","value","FormData","append","deleteAllTasks","alert","target","checked","push","filter"],"sourceRoot":""}